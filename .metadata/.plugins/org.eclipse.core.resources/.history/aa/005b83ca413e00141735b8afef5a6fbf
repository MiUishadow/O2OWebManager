package com.o2oweb.action;

import java.util.List;

import javax.annotation.Resource;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Service;

import com.o2oweb.common.dao.support.Page;
import com.o2oweb.entity.Itemlevel;
import com.o2oweb.service.ItemLevelService;
import com.o2oweb.util.BaseAction;
import com.o2oweb.util.MyJson;

@Scope("request")
@Service("itemLevelAction")
public class itemLevelLevelAction extends BaseAction {

	private itemLevelService itemLevelService;
	private Integer itemLevelId;
	private String itemLevelName;
	private Integer levelId;
	private float price;
	private float inPrice;
	private Integer discount;
	private Integer sailerId;
	private Integer imageId;
	private String itemLevelDetail;
	private Integer stockNum;
	private String barCode;
	
	//分页参数
	private String rows;	//每页多少行
	private String page;	//当前页码
	private String orderby;	//过滤条件
	
	public void save() {
		itemLevel itemLevel = new itemLevel(itemLevelName, levelId, price, inPrice, discount,
				sailerId, imageId, itemLevelDetail, stockNum, barCode);

		this.itemLevelService.save(itemLevel);

		writeResponse("true");
	}

	public void remove() {
		itemLevel itemLevel = new itemLevel();
		itemLevel.setitemLevelId(itemLevelId);

		this.itemLevelService.remove(itemLevel);

		writeResponse("true");
	}

	public void update() {
		itemLevel itemLevel = new itemLevel(itemLevelName, levelId, price, inPrice, discount,
				sailerId, imageId, itemLevelDetail, stockNum, barCode);

		this.itemLevelService.update(itemLevel);

		writeResponse("true");
	}
	
	@Override
	public String execute() throws Exception {
		System.out.println(rows);
		System.out.println(page);
		
		DetachedCriteria dc = DetachedCriteria.forClass(itemLevel.class);
		if("price_desc".endsWith(orderby)){
			dc.addOrder(Order.desc("price"));
		}else if(orderby != null){
			dc.addOrder(Order.asc(orderby));
		}
		Page p = itemLevelService.itemLevelquery(dc, Integer.valueOf(rows), Integer.valueOf(page));
		
		JSONObject obj = MyJson.page2Jsobj(p);
		
		writeResponse(obj);
		return super.execute();
	}
	
	public void getitemLevel() {
		itemLevel itemLevel = this.itemLevelService.getitemLevel(itemLevelId);

		JSONObject obj = JSONObject.fromObject(itemLevel);
		writeResponse(obj.toString());
	}

	public void getAttributesByitemLevelId() {
		List<itemLevel> attributes = this.itemLevelService.getAttributes(itemLevelId);

		JSONArray array = JSONArray.fromObject(attributes);
		writeResponse(array.toString());
	}

	public itemLevelService getitemLevelService() {
		return itemLevelService;
	}
	
	
	@Resource
	public void setitemLevelService(itemLevelService itemLevelService) {
		this.itemLevelService = itemLevelService;
	}

	public Integer getitemLevelId() {
		return itemLevelId;
	}

	public void setitemLevelId(Integer itemLevelId) {
		this.itemLevelId = itemLevelId;
	}

	public String getitemLevelName() {
		return itemLevelName;
	}

	public void setitemLevelName(String itemLevelName) {
		this.itemLevelName = itemLevelName;
	}

	public Integer getLevelId() {
		return levelId;
	}

	public void setLevelId(Integer levelId) {
		this.levelId = levelId;
	}

	public float getPrice() {
		return price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	public float getInPrice() {
		return inPrice;
	}

	public void setInPrice(float inPrice) {
		this.inPrice = inPrice;
	}

	public Integer getDiscount() {
		return discount;
	}

	public void setDiscount(Integer discount) {
		this.discount = discount;
	}

	public Integer getSailerId() {
		return sailerId;
	}

	public void setSailerId(Integer sailerId) {
		this.sailerId = sailerId;
	}

	public Integer getImageId() {
		return imageId;
	}

	public void setImageId(Integer imageId) {
		this.imageId = imageId;
	}

	public String getitemLevelDetail() {
		return itemLevelDetail;
	}

	public void setitemLevelDetail(String itemLevelDetail) {
		this.itemLevelDetail = itemLevelDetail;
	}

	public Integer getStockNum() {
		return stockNum;
	}

	public void setStockNum(Integer stockNum) {
		this.stockNum = stockNum;
	}

	public String getBarCode() {
		return barCode;
	}

	public void setBarCode(String barCode) {
		this.barCode = barCode;
	}

	public String getRows() {
		return rows;
	}

	public String getPage() {
		return page;
	}

	public void setRows(String rows) {
		this.rows = rows;
	}

	public void setPage(String page) {
		this.page = page;
	}

	public String getOrderby() {
		return orderby;
	}

	public void setOrderby(String orderby) {
		this.orderby = orderby;
	}
	
}
