package com.o2oweb.action;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.hibernate.criterion.DetachedCriteria;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Service;

import com.o2oweb.common.dao.support.Page;
import com.o2oweb.entity.OrderItem;
import com.o2oweb.service.OrderItemService;
import com.o2oweb.util.BaseAction;
import com.o2oweb.util.MyJson;

@Scope("request")
@Service("orderItemAction")
public class OrderItemAction extends BaseAction {

	private orderItemService orderItemService;

	private Integer idorderItem;
	private String address;
	private String username;
	private String tel;
	private Integer userId;

	// 分页参数
	private String rows; // 每页多少行
	private String page; // 当前页码
	private String orderby; // 过滤条件

	public void save() {
		Date lastuse = new Date();

		orderItem orderItem = new orderItem(address, username, tel,
				userId, lastuse);

		this.orderItemService.save(orderItem);

		writeResponse(true);
	}

	public void remove() {
		orderItem orderItem = new orderItem();
		orderItem.setIdorderItem(idorderItem);

		this.orderItemService.remove(orderItem);

		writeResponse(true);
	}

	public void update() {
		Date lastuse = new Date();

		orderItem orderItem = new orderItem(address, username, tel,
				userId, lastuse);
		orderItem.setIdorderItem(idorderItem);

		this.orderItemService.update(orderItem);

		writeResponse(true);
	}

	public void getorderItemByAddId() {
		orderItem orderItem = this.orderItemService
				.getorderItem(idorderItem);

		JSONObject obj = JSONObject.fromObject(orderItem);
		writeResponse(obj.toString());
	}

	public void getorderItemByUserId() {
		List<orderItem> list = this.orderItemService.getAddrs(userId);

		JSONArray array = JSONArray.fromObject(list);
		writeResponse(array.toString());
	}

	public void pageQuery() {
		DetachedCriteria dc = DetachedCriteria.forClass(orderItem.class);
		Page p = this.orderItemService.pagedQuery(dc, Integer.valueOf(rows),
				Integer.valueOf(page));

		JSONObject obj = MyJson.page2Jsobj(p);

		writeResponse(obj);
	}

	public orderItemService getorderItemService() {
		return orderItemService;
	}

	@Resource
	public void setorderItemService(orderItemService orderItemService) {
		this.orderItemService = orderItemService;
	}

	public Integer getIdorderItem() {
		return idorderItem;
	}

	public void setIdorderItem(Integer idorderItem) {
		this.idorderItem = idorderItem;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getTel() {
		return tel;
	}

	public void setTel(String tel) {
		this.tel = tel;
	}

	public Integer getUserId() {
		return userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public String getRows() {
		return rows;
	}

	public void setRows(String rows) {
		this.rows = rows;
	}

	public String getPage() {
		return page;
	}

	public void setPage(String page) {
		this.page = page;
	}

	public String getOrderby() {
		return orderby;
	}

	public void setOrderby(String orderby) {
		this.orderby = orderby;
	}

}
